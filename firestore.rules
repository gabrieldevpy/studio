
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.admin == true;
    }

    // Users can be created by anyone during signup
    // They can only read/update their own document
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == userId || isAdmin(request.auth.uid);
      // Admin can read all user documents
      allow list: if isAdmin(request.auth.uid);
    }
    
    // Routes can be read/written only by the owner or an admin
    match /routes/{routeId} {
      allow read, create, update, delete: if request.auth.uid == request.resource.data.userId || isAdmin(request.auth.uid);
      // Admin can list all routes
      allow list: if isAdmin(request.auth.uid);
    }

    // Anyone can write to logs, this is required for the cloaking endpoint to work
    match /logs/{logId} {
      allow create: if true;
      allow read, list: if request.auth != null && (exists(/databases/$(database)/documents/users/$(request.auth.uid))); // only logged-in users can read logs
    }
  }
}
