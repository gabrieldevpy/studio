
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // Check if the user is authenticated and has an 'admin' flag in their user document
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can create their own user document upon signup
    // Users can read their own document
    // Users can update their own document, but cannot make themselves an admin
    // Admins can read any user document
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if request.auth.uid == userId || isAdmin();
      allow update: if request.auth.uid == userId && !("admin" in request.resource.data);
      allow delete: if isAdmin(); // Only admins can delete users
    }

    // Routes can be read, created, updated, and deleted by their owner (userId)
    // Admins can read any route
    match /routes/{routeId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }

    // Anyone can create a log entry (for the cloaking link to work)
    // Log owners can read their own logs
    // Admins can read any log
    match /logs/{logId} {
       allow create: if true;
       allow read: if request.auth.uid == resource.data.userId || isAdmin();
       // Logs are immutable, no updates or deletes allowed for now
       allow update, delete: if false;
    }
  }
}
