rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }
    
    // Users can only be created by new users, or read/updated by themselves or admins
    match /users/{userId} {
      allow read, update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Routes can be read/written by their owner, or read by an admin
    match /routes/{routeId} {
      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
      allow create, update, delete: if request.auth != null && request.data.userId == request.auth.uid;
    }
    
    // Logs can be created by anyone (for the cloaking service)
    // Logs can be read by their owner or an admin
    match /logs/{logId} {
      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if true;
    }

    // Admins can list users and routes
    match /users/{document=**} {
      allow list: if isAdmin();
    }

    match /routes/{document=**} {
      allow list: if isAdmin();
    }
  }
}
